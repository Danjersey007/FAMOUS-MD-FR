function Unicode(text) {
    const nor_chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const str_c = '­Юљђ­ЮљЂ­Юљѓ­ЮљЃ­Юљё­ЮљЁ­Юљє­ЮљЄ­Юљѕ­ЮљЅ­Юљі­ЮљІ­Юљї­ЮљЇ­Юљј­ЮљЈ­Юљљ­ЮљЉ­Юљњ­ЮљЊ­Юљћ­ЮљЋ­Юљќ­ЮљЌ­Юљў­ЮљЎ­Юљџ­ЮљЏ­Юљю­ЮљЮ­Юљъ­ЮљЪ­Юља­ЮљА­Юљб­ЮљБ­Юљц­ЮљЦ­Юљд­ЮљД­Юље­ЮљЕ­Юљф­ЮљФ­Юљг­ЮљГ­Юљ«­Юљ»­Юљ░­Юљ▒­Юљ▓­Юљ│­ЮЪј­ЮЪЈ­ЮЪљ­ЮЪЉ­ЮЪњ­ЮЪЊ­ЮЪћ­ЮЪЋ­ЮЪќ­ЮЪЌ';
    
    let unicode_c = '';
    for (let i = 0; i < text.length; i++) {
        const char = text[i];
        const index = nor_chars.indexOf(char);

        if (index > -1) {
            unicode_c += str_c[index];
        } else {
            unicode_c += char;
        }
    }

    return unicode_c;
}

function toTiny(text) {
    const nc_char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    const tiny_c = {
        A: 'р┤ђ', B: '╩Ў', C: 'р┤ё', D: 'р┤Ё', E: 'р┤Є', F: 'мЊ', G: '╔б', H: '╩ю', I: '╔ф', J: 'р┤і', 
        K: 'р┤І', L: '╩Ъ', M: 'р┤Ї', N: '╔┤', O: 'р┤Ј', P: 'р┤ў', Q: 'КФ', R: '╩ђ', S: 's', T: 'р┤Џ', 
        U: 'р┤ю', V: 'р┤а', W: 'р┤А', X: 'x', Y: '╩Ј', Z: 'р┤б',
        a: 'рхЃ', b: 'рхЄ', c: 'рХю', d: 'рхѕ', e: 'рхЅ', f: 'рХа', g: 'рхЇ', h: '╩░', i: 'РЂ▒', j: '╩▓',
        k: 'рхЈ', l: '╦А', m: 'рхљ', n: 'РЂ┐', o: 'рхњ', p: 'рхќ', q: 'q', r: '╩│', s: '╦б', t: 'рхЌ',
        u: 'рхў', v: 'рхЏ', w: '╩и', x: '╦Б', y: '╩И', z: 'рХ╗',
        0: 'РЂ░', 1: '┬╣', 2: '┬▓', 3: '┬│', 4: 'РЂ┤', 5: 'РЂх', 6: 'РЂХ', 7: 'РЂи', 8: 'РЂИ', 9: 'РЂ╣'
    };
    
    let tiny_c = '';
    for (let i = 0; i < text.length; i++) {
        const char = text[i];
        tiny_c += nc_char[char] || char;
    }

    return tiny_c;
}

module.exports = {
    Unicode,
    toTiny
};
